name: Rust CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Install toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt, clippy
        
    - name: Format check
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check
        
    - name: Clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: -- -D warnings
        
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --verbose
        
    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --verbose
  
  coverage:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
    
    - name: Install toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        
    - name: Install tarpaulin
      run: cargo install cargo-tarpaulin
        
    - name: Generate coverage report
      run: cargo tarpaulin --out Xml --output-dir target
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: target/cobertura.xml
        fail_ci_if_error: true
        
    - name: Check coverage against targets
      run: |
        chmod +x .devtools/scripts/check_coverage.sh
        .devtools/scripts/check_coverage.sh
        
    - name: Check test quality
      run: |
        chmod +x .devtools/scripts/test_quality.sh
        .devtools/scripts/test_quality.sh
        
    - name: Upload coverage artifacts
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: target/@navius-coverage.json 