[package]
name = "navius"
version = "0.1.0"
edition = "2024"
build = "build.rs"
authors = ["Evan Coleman"]
description = "An enterprise-grade web framework built with Rust, designed as a high-performance alternative to Spring Boot"
license = "Apache-2.0"
repository = "https://github.com/Evan-Coleman/Navius"
readme = "README.md"
keywords = ["api", "backend", "axum", "enterprise", "framework"]
categories = ["web-programming", "asynchronous"]

# SQLx offline mode configuration
[package.metadata.sqlx]
offline = true

# Feature flags
[features]
default = []
production = []
examples = []

# Suppress specific warnings
[lints.rust]
dead_code = "allow"
unused_imports = "allow"

[dependencies]
axum = { version = "0.8.1", features = ["macros"] }
async-trait = "0.1.88"
base64 = "0.22.1"
reqwest = { version = "0.12.15", features = ["json"] }
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.140"
serde_yaml = "0.9.33"
tokio = {version = "1.44.1", features = ["rt-multi-thread", "macros"] }
tracing = "0.1.41"
tracing-subscriber = "0.3.19"
# Configuration dependencies
config = { version = "0.15.11", features = ["yaml"] }
dotenvy = "0.15.7"
thiserror = "2.0.12"
# Caching dependencies
moka = { version = "0.12.10", features = ["future"] }
# Metrics dependencies
metrics = "0.24.1"
metrics-exporter-prometheus = "0.16.2"
# Time handling
chrono = { version = "0.4.40", features = ["serde"] }
# Middleware and error handling
tower = { version = "0.5.2", features = ["full"] }
tower-http = { version = "0.6.2", features = ["trace", "timeout", "catch-panic", "request-id", "cors"] }
uuid = { version = "1.16.0", features = ["v4", "serde"] }
tracing-futures = "0.2.5"
sqlx = { version = "0.8.3", features = ["runtime-tokio-rustls", "postgres", "sqlite", "macros", "chrono", "uuid", "json"] }

# Authentication
jsonwebtoken = "9.3.1"
oauth2 = { version = "5.0.0", features = ["reqwest"] }
reqwest-middleware = "0.4.1"
futures = "0.3.31"
futures-util = { version = "0.3.31", features = ["std"] }

# Web framework and related
pin-project = "1.1.10"
rand = "0.9.0"
rand_chacha = "0.9.0"
lazy_static = "1.5"
bytes = "1.10.1"

[dev-dependencies]
# HTTP Mocking
mockito = "1.7.0"
wiremock = "0.6.3"

# Trait/Component Mocking
mock-it = "0.9.0"

# Property-based testing
proptest = "1.6.0"

# Test data generation
fake = { version = "4.2.0", features = ["derive", "chrono", "uuid"] }

# Test utilities
test-context = "0.4.1"
assert_matches = "1.5.0"
once_cell = "1.21.1"
mockall = "0.13.1"

[build-dependencies]
# Don't need full regex crate, just simple string manipulation
regex = "1.11.1"
serde_json = "1.0.140"
